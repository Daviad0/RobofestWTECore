<<<<<<< Updated upstream
#pragma checksum "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/Team/TimerDemo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7de5ef6598947045a4e232d51d7ff09e3bd7f099"
=======
#pragma checksum "C:\Users\djree\source\repos\RobofestWTEOfficial\RobofestWTECore\RobofestWTECore\Views\Team\TimerDemo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "67b530ab0119791ca83b8bdc6f0e76f79f041102"
>>>>>>> Stashed changes
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(RobofestWTECore.Pages.Team.Views_Team_TimerDemo), @"mvc.1.0.view", @"/Views/Team/TimerDemo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Team/TimerDemo.cshtml", typeof(RobofestWTECore.Pages.Team.Views_Team_TimerDemo))]
namespace RobofestWTECore.Pages.Team
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/_ViewImports.cshtml"
using RobofestWTECore;

#line default
#line hidden
#line 3 "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/_ViewImports.cshtml"
using RobofestWTECore.Data;

#line default
#line hidden
<<<<<<< Updated upstream
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7de5ef6598947045a4e232d51d7ff09e3bd7f099", @"/Views/Team/TimerDemo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b0c74960f6b96bae451f4a9058021941d4cf852", @"/Views/_ViewImports.cshtml")]
=======
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"67b530ab0119791ca83b8bdc6f0e76f79f041102", @"/Views/Team/TimerDemo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce755af2a7418f0d746543a6139563ea8d84f149", @"/Views/_ViewImports.cshtml")]
>>>>>>> Stashed changes
    public class Views_Team_TimerDemo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RobofestWTE.Models.MatchDataModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/jquery-3.3.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("integrity", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("crossorigin", new global::Microsoft.AspNetCore.Html.HtmlString("anonymous"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/jquery.signalR-2.4.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/signalr/hubs"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(41, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 3 "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/Team/TimerDemo.cshtml"
  
    ViewBag.Title = "Match Manager";

#line default
#line hidden
            BeginContext(84, 3096, true);
            WriteLiteral(@"<style>
    .btn-group {
        display: flex;
    }


    .btn {
        flex: 1
    }

    btn-default: {
        background-color: gray
    }

    .big {
        font-size: 1.2em;
        border: none;
        border-radius: 4px;
    }

    .custom-dropdown {
        position: relative;
        display: inline-block;
        vertical-align: middle;
        margin: 10px; /* demo only */
    }

        .custom-dropdown select {
            background-color: #1abc9c;
            color: #fff;
            font-size: inherit;
            padding: .5em;
            padding-right: 2.5em;
            border: 0;
            margin: 0;
            border-radius: 3px;
            text-indent: 0.01px;
            text-overflow: '';
            -webkit-appearance: button; /* hide default arrow in chrome OSX */
        }

        .custom-dropdown::before,
        .custom-dropdown::after {
            content: """";
            position: absolute;
            pointer-events: none;
        }

        .custom-dropdown::after");
            WriteLiteral(@" { /*  Custom dropdown arrow */
            content: ""\25BC"";
            height: 1em;
            font-size: .625em;
            line-height: 1;
            right: 1.2em;
            top: 50%;
            margin-top: -.5em;
        }

        .custom-dropdown::before { /*  Custom dropdown arrow cover */
            width: 2em;
            right: 0;
            top: 0;
            bottom: 0;
            border-radius: 0 3px 3px 0;
        }

        .custom-dropdown select[disabled] {
            color: rgba(0,0,0,.3);
        }

            .custom-dropdown select[disabled]::after {
                color: rgba(0,0,0,.1);
            }

        .custom-dropdown::before {
            background-color: rgba(0,0,0,.15);
        }

        .custom-dropdown::after {
            color: rgba(0,0,0,.4);
        }

    .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        background-color: #ecbb06;
        color: white;
        text-align: center;
    }

    .createforms {");
            WriteLiteral(@"
        border: none;
        border-bottom: 2px solid gray;
        padding-left: 2px;
        transition: 0.3s;
        border-radius: 4px;
    }

        .createforms:hover {
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:focus {
            border-bottom: 2px solid red;
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:disabled, .createforms:read-only {
            cursor: not-allowed;
            padding-left: 2px;
            transition: 0.3s;
        }

            .createforms:disabled:hover, .createforms:disabled:active, .createforms:read-only:hover, .createforms:read-only:active {
                cursor: not-allowed;
                background-color: red;
                padding-left: 5px;
                opacity: 0.6;
            }

    .text-danger {
        text-align: center;
    }

    .ready {
        animation-name: color;
        animation-duration: 1s;
        animation-iteration-coun");
            WriteLiteral("t: infinite;\n    }\n\n    ");
            EndContext();
<<<<<<< Updated upstream
            BeginContext(3181, 300, true);
=======
            BeginContext(3181, 306, true);
>>>>>>> Stashed changes
            WriteLiteral(@"@keyframes color {
        0% {
            background-color: mediumseagreen
        }

        50% {
            background-color: seagreen;
        }
    }
    .almostdone {
        animation-name: colordone;
        animation-duration: 1.5s;
        animation-iteration-count: infinite;
    }
    ");
            EndContext();
<<<<<<< Updated upstream
            BeginContext(3482, 444, true);
=======
            BeginContext(3488, 462, true);
>>>>>>> Stashed changes
            WriteLiteral(@"@keyframes colordone {
        0% {
            border-bottom-color: green;
            border-top-color: green;
            background-color: green
        }

        50% {
            border-bottom-color: orange;
            border-top-color: orange;
            background-color:orange;
        }
    }

    .judgehelp {
        animation-name: color2;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }

    ");
            EndContext();
<<<<<<< Updated upstream
            BeginContext(3927, 828, true);
=======
            BeginContext(3951, 830, true);
>>>>>>> Stashed changes
            WriteLiteral(@"@keyframes color2 {
        0% {
            background-color: yellow
        }

        50% {
            background-color: red;
        }
    }

    .overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
    }

    .textoverlay {
        position: absolute;
        top: 50%;
        left: 50%;
        color: black;
        background-color: white;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }.column {
  float: left;
  width: 50%;
  padding: 10px;
}

/* Clear floats after the columns */
.row:after {
  content: """";
  display: table;
  clear: both;
}
.ournavbar{
    display:none
}
    
</style>

");
            EndContext();
<<<<<<< Updated upstream
#line 223 "/Users/daviado/Downloads/RobofestWTECore/RobofestWTECore/Views/Team/TimerDemo.cshtml"
=======
#line 223 "C:\Users\djree\source\repos\RobofestWTEOfficial\RobofestWTECore\RobofestWTECore\Views\Team\TimerDemo.cshtml"
>>>>>>> Stashed changes
  var timeStamp = DateTime.UtcNow; 

#line default
#line hidden
<<<<<<< Updated upstream
            BeginContext(4792, 7, true);
            WriteLiteral("<br />\n");
            EndContext();
            BeginContext(4799, 86, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6e6611dd2c5c4569ba1d616a86a66903", async() => {
=======
            BeginContext(4818, 7, true);
            WriteLiteral("<br />\n");
            EndContext();
            BeginContext(4825, 86, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a44db0f630e047128c9ae502aa8c25f8", async() => {
>>>>>>> Stashed changes
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
<<<<<<< Updated upstream
            BeginContext(4885, 3877, true);
=======
            BeginContext(4911, 3887, true);
>>>>>>> Stashed changes
            WriteLiteral(@"
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>
<div style=""background-color:lightgray;border-radius:6px;border:10px solid lightgray;z-index:-1;text-align:center"">
    <div>
            <div style=""border-radius:4px;display:inline-block;border-radius:8px;margin:40px"">
            <strong><span style=""border-radius:8px 8px 0px 0px;font-family:Arial, Helvetica, sans-serif;background-color:black;padding:35px;color:white;margin-bottom:0px;margin-top:0px;font-size:200px"" class=""timerarea""><span id=""minutes"" class=""timerarea minutes"">0</span>:<span id=""seconds"" class=""timerarea seconds"">00</span></span></strong>


<<<<<<< Updated upstream
            <div style=""background-color:lightgra");
            WriteLiteral(@"y;text-align:center;border-radius:0px 0px 8px 8px"">
=======
            <div style=""background-color:ligh");
            WriteLiteral(@"tgray;text-align:center;border-radius:0px 0px 8px 8px"">
>>>>>>> Stashed changes

                <div class=""statustimeout status"" style=""background-color:gray;width:100%;height:40px;border-radius:0px 0px 8px 8px""></div>
            </div>

        </div>

        </div>
    <div style=""display:inherit"">
        <table style=""width:100%"">
            <tr>
                <td style=""width:50%"">
                    <div class=""input-group"">
                        <span class=""input-group-addon"">
                            <span>Minutes</span>
                        </span>
                        <input type=""number"" id=""minutesi"" value=""2"" placeholder=""Minutes"" class=""form-control"" style=""z-index:0"" />
                    </div>
                </td>
                <td style=""width:50%"">
                    <div class=""input-group"">
                        <span class=""input-group-addon"">
                            <span>Seconds</span>
                        </span>
<<<<<<< Updated upstream
                        <input type=""number"" id=""secondsi"" value=""");
            WriteLiteral(@"0"" placeholder=""Seconds"" class=""form-control"" style=""z-index:0"" />
=======
                        <input type=""number"" id=""seconds");
            WriteLiteral(@"i"" value=""0"" placeholder=""Seconds"" class=""form-control"" style=""z-index:0"" />
>>>>>>> Stashed changes
                    </div>
                </td>
            </tr>
           
        </table>
        <div class=""input-group"">
            <span class=""input-group-addon"">
                <span>Message</span>
            </span>
            <input type=""text"" id=""messagei"" class=""form-control"" style=""z-index:0"" />
        </div>
        
        

        
        <br />
        <input type=""button"" id=""starttimer"" value=""Start"" style=""background-color:#1fa128;width:100%;padding:10px;margin-bottom:10px;margin-top:10px;color:white;font-weight:600;border:none;border-radius:10px"" />
        <input type=""button"" id=""stoptimer"" value=""Stop"" style=""background-color:#e32b56;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:10px"" />
<<<<<<< Updated upstream
        <input type=""button"" id=""confirmstop"" value=""CONFIRM STOP!"" style=""background-color:darkred;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;b");
            WriteLiteral(@"order:none;border-radius:10px"" hidden=""hidden"" />
=======
        <input type=""button"" id=""confirmstop"" value=""CONFIRM STOP!"" style=""background-color:darkred;width:100%;padding:10px;margin-bottom:10px;color:white;font-we");
            WriteLiteral(@"ight:600;border:none;border-radius:10px"" hidden=""hidden"" />
>>>>>>> Stashed changes
        <br />
        <input type=""button"" id=""sendtimer"" value=""Set to User Specified Value"" style=""width:100%;padding:10px;margin-bottom:10px;color:black;font-weight:600;border:none;border-radius:10px"" />
        <br />
        <input type=""button"" id=""presetmatch"" value=""Match Preset"" style=""background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600""/>
        <input type=""button"" id=""presettimeout"" value=""Timeout Preset"" style=""background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600"" />
        <input type=""button"" id=""presetpittime"" value=""Pit Preset"" style=""background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600"" />
        
    </div>
</div>
<br />
");
            EndContext();
<<<<<<< Updated upstream
            BeginContext(8762, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d2200f53d884ebd94dd8163d9e7fcbf", async() => {
=======
            BeginContext(8798, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d71b217bcb6448d9edf74fc47be9c6f", async() => {
>>>>>>> Stashed changes
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
<<<<<<< Updated upstream
            BeginContext(8823, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(8824, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "059a62fd21c247bc888bdc1b3ea46b1f", async() => {
=======
            BeginContext(8859, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(8860, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c67c1a579d4440a288703576d4443022", async() => {
>>>>>>> Stashed changes
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
<<<<<<< Updated upstream
            BeginContext(8875, 49512, true);
=======
            BeginContext(8911, 49512, true);
>>>>>>> Stashed changes
            WriteLiteral(@"
<script>
    $(function () {
        var timer = false;
        var minutesc = 0;
        var secondsc = 0;
        var secondsview = ""00"";
        var interval = false;
        var part = 1;
        var minutess = 0;
        var secondss = 0;
        var message = """";
        var abort = false;
        var stopped = true;
        var initseconds = 0;
        var fieldarray = [0, 0, 0, 0, 0, 0];
        var fieldconnected = [false, false, false, false, false, false]
        var fieldjudge = ["""", """", """", """", """", """"]
        var currentstage = 0;
        var dangercontrols = false;
        var dangertimer = 0;
        var confirmstoptimer = 0;
        var roundidlist = [0, 0, 0, 0, 0, 0];
        var publicround = 0;
        var currentmatch = 1;
        var oldmatchselected = false;
        var matchesvalid = [false, false, false, false, false, false]
        // Reference the auto-generated proxy for the hub.
        var chat = new signalR.HubConnectionBuilder().withUrl(""/scoreHub"").build();
        // Create");
            WriteLiteral(@" a function that the hub can call back to display messages.
        chat.on(""changeTeamScores"",function (topten) {
            // Add the message to the page.
            //$('#' + teamnumber).text(score);
            $("".topteams"").empty();

            $.each(topten, function (index, value) {
                var markup = ""<tr style='text-align:center;padding-left:5px'><th width='10%' style='text-align:left'>"" + (index + 1) +
                    ""</th><th width='30%' style='text-align:center'>"" + value.TeamNumber + ""</th><th width='30%' style='text-align:center'>"" +
                    value.TeamName + ""</th><th width='30%' style='text-align:center'>"" +
                    value.Average + ""</th></tr>"";
                $("".topteams"").append(markup);
            });
        });
        chat.on(""changelist"", function (matchdatamodel) {
            $(""#round1selection"").empty();
            $.each(matchdatamodel.r1List, function (index, value) {
                var markup = ""<tr><td>"" + value.teamID + ""</td><td>");
            WriteLiteral(@""" + value.teamNumberBranch + ""-"" + value.teamNumberSpecific + ""</td><td>"" + value.teamName + ""</td></tr>""
                $(""#round1selection"").append(markup);
            });
            $(""#round2selection"").empty();
            $.each(matchdatamodel.r2List, function (index, value) {
                var markup = ""<tr><td>"" + value.teamID + ""</td><td>"" + value.teamNumberBranch + ""-"" + value.teamNumberSpecific + ""</td><td>"" + value.teamName + ""</td></tr>""
                $(""#round2selection"").append(markup);
            });
        });
        chat.on(""broadcast"",  function (message, issue, sender, time, volunteersonly) {
            $(""#currentbroadcast"").html(message);
            $(""#broadcastsender"").html(""- "" + sender);
        });
        chat.on(""changeGlobalTimer"", function (minutes, seconds, message, status) {
            $("".minutes"").html(minutes);
            if (seconds < 10) {
                secondsview = ""0"" + seconds;
            } else {
                secondsview = seconds;
            }
 ");
            WriteLiteral(@"           $("".seconds"").html(secondsview);
            $("".message"").html(message);
            if (status == 0) {
                $("".status"").css(""border-bottom"", ""12px gray solid"");
                $("".status"").css(""border-top"", ""12px gray solid"");
                $("".statustopbar"").css(""border-left"", ""6px gray solid"");
                $("".statustimeout"").css(""background-color"", ""gray"");
                $("".status"").removeClass(""almostdone"");
                initsec = ((minutes * 60) + (seconds));
                $("".statustimeout"").css(""width"", ""100%"");
            } else if (status == 1) {
                $("".status"").css(""border-bottom"", ""12px green solid"");
                $("".status"").css(""border-top"", ""12px green solid"");
                $("".statustopbar"").css(""border-left"", ""6px green solid"");
                $("".statustimeout"").css(""background-color"", ""green"");
                if (((minutes * 60) + (seconds)) < (initsec / 4)) {
                    $("".status"").addClass(""almostdone"");
             ");
            WriteLiteral(@"   }
                $("".statustimeout"").css(""width"", ((((minutes * 60) + seconds) / initsec)*100)+""%"")
            } else if (status == 2 && seconds < 1 && minutes < 1) {
                $("".status"").css(""border-bottom"", ""12px red solid"");
                $("".statustopbar"").css(""border-left"", ""6px red solid"");
                $("".status"").css(""border-top"", ""12px red solid"");

                $("".statustimeout"").css(""background-color"", ""red"");
                $("".statustimeout"").css(""width"", ""100%"");
                $("".status"").removeClass(""almostdone"");
            } else {
                $("".status"").css(""border-bottom"", ""12px gray solid"");
                $("".status"").css(""border-top"", ""12px gray solid"");
                $("".statustopbar"").css(""border-left"", ""6px gray solid"");
                $("".statustimeout"").css(""background-color"", ""gray"");
                $("".status"").removeClass(""almostdone"");
            }
        });
        chat.on(""initFieldView"", function (field, status, score, team, connectio");
            WriteLiteral(@"n, matchkeeper) {
            if (status == 0) {
                $(""#field"" + field + ""status"").css(""background-color"", ""gray"");
                $(""#field"" + field + ""status"").html(""Not Using"");
                $(""#field"" + field + ""connection"").html("""");
                fieldarray[field - 1] = 0;
                if (matchkeeper == true) {
                    $(""#field"" + field + ""status"").html(""Not Using (SC)"");
                }
            } else if (status == 1) {
                $(""#field"" + field + ""status"").css(""background-color"", ""tomato"");
                $(""#field"" + field + ""status"").html(""Not Ready"");
                fieldarray[field - 1] = 1;
                if (matchkeeper == true) {
                    $(""#field"" + field + ""status"").html(""Not Ready (SC)"");
                }
            } else if (status == 2) {
                $(""#field"" + field + ""status"").css(""background-color"", ""MediumSeaGreen"");
                $(""#field"" + field + ""status"").html(""Ready"");
                fieldarray[field -");
            WriteLiteral(@" 1] = 2;
                if (matchkeeper == true) {
                    $(""#field"" + field + ""status"").html(""Ready (SC)"");
                }
            } else if (status == 3) {
                $(""#field"" + field + ""status"").css(""background-color"", ""dodgerblue"");
                $(""#field"" + field + ""status"").html(""Scored"");
                fieldarray[field - 1] = 3;
                if (matchkeeper == true) {
                    $(""#field"" + field + ""status"").html(""Scored (SC)"");
                }
            } else if (status == 5) {
                $(""#finalscoref"" + field).html(score);
                $(""#finalscoref"" + field).css(""background-color"", ""mediumseagreen"")
                $(""#teamnumberf"" + field).html(team);
                $(""#teamnumberf"" + field).css(""background-color"", ""mediumseagreen"")
            }
            if (currentstage == 3 || currentstage == 4) {
                if (fieldarray.includes(1) == true || fieldarray.includes(2) == true) {
                    $(""#gamestatus"").html(""No");
            WriteLiteral(@"t Ready to Reset!"")
                    $(""#gamestatus"").removeClass(""ready"").css(""background-color"", ""tomato"");
                } else {
                    $(""#gamestatus"").html(""<<< OK TO RESET <<<"");
                    $(""#gamestatus"").addClass(""ready"").css(""background-color"", ""mediumseagreen"");

                }
            }
            else if (currentstage == 1 || currentstage == 2) {
                if (fieldarray.includes(1) == true) {
                    $(""#gamestatus"").html(""Not Ready to Start!"");
                    $(""#gamestatus"").removeClass(""ready"").css(""background-color"", ""tomato"");
                } else {
                    $(""#gamestatus"").html("">>> OK TO START >>>"");
                    $(""#gamestatus"").addClass(""ready"").css(""background-color"", ""mediumseagreen"");
                }
            }

        });
        chat.on(""updateLive"", function (field, account) {
            if (field < 7 && field > 0) {
                fieldconnected[field - 1] = true;
                fieldjudge[fi");
            WriteLiteral(@"eld - 1] = account;
            }
        });
        chat.on(""changeStage"", function (stage) {
            $(""#stagebox"" + 1).css(""background-color"", ""gray"");
            $(""#stagebox"" + 2).css(""background-color"", ""gray"");
            $(""#stagebox"" + 3).css(""background-color"", ""gray"");
            $(""#stagebox"" + 4).css(""background-color"", ""gray"");
            $(""#stagebox"" + 5).css(""background-color"", ""gray"");
            $(""#stagebox"" + stage).css(""background-color"", ""mediumseagreen"");
            currentstage = stage;
            if (currentstage == 3 || currentstage == 4) {
                if (fieldarray.includes(1) == true || fieldarray.includes(2) == true) {
                    $(""#gamestatus"").html(""Not Ready to Reset!"")
                    $(""#gamestatus"").removeClass(""ready"").css(""background-color"", ""tomato"");
                } else {
                    $(""#gamestatus"").html(""<<< OK TO RESET <<<"");
                    $(""#gamestatus"").addClass(""ready"").css(""background-color"", ""mediumseagreen"");

  ");
            WriteLiteral(@"              }
            }
            else if (currentstage == 1 || currentstage == 2) {
                if (fieldarray.includes(1) == true) {
                    $(""#gamestatus"").html(""Not Ready to Start!"");
                    $(""#gamestatus"").removeClass(""ready"").css(""background-color"", ""tomato"");
                } else {
                    $(""#gamestatus"").html("">>> OK TO START >>>"");
                    $(""#gamestatus"").addClass(""ready"").css(""background-color"", ""mediumseagreen"");
                }
            }
            if (stage == 3) {
                $(""#resetmatch"").attr(""hidden"", false);
            } else {
                $(""#resetmatch"").attr(""hidden"", true);
            }
        });
        chat.on(""helpThisJudge"", function (field, helping) {
            if (helping == true) {
                $(""#panicstatusf"" + field).css(""background-color"", ""yellow"");
                $(""#panicstatusf"" + field).addClass(""judgehelp"");
                $(""#panicstatusf"" + field).html(""Help Requested!"");
 ");
            WriteLiteral(@"           } else {
                $(""#panicstatusf"" + field).css(""background-color"", """");
                $(""#panicstatusf"" + field).removeClass(""judgehelp"");
                $(""#panicstatusf"" + field).html("""");
            }

        });
        
        chat.on(""chatMessage"", function (message, issue, sender, time, broadcast) {
            $("".volunteerchat"").append(""<tr><td width='20%' style='color:red'><strong>"" + sender + ""</strong></td><td width='70%'>"" + message + ""</td><td width='10%'>"" + issue + ""</td></tr>"")
        });
        chat.on(""checkThisScore"", function (field, data, score, roundid, teamnumber) {
            var splitdata = data.split(""^"");
            var bottlesdata = splitdata[0].split(""/"");
            var ballsdata = splitdata[1].split(""/"");
            var extradata = splitdata[2].split(""/"");
            var penaltydata = splitdata[3].split(""/"");
            $("".bottle1f"" + field).val(bottlesdata[0]).attr(""selected"", ""selected"");
            $("".bottle2f"" + field).val(bottlesdata[1]");
            WriteLiteral(@").attr(""selected"", ""selected"");
            $("".bottle3f"" + field).val(bottlesdata[2]).attr(""selected"", ""selected"");
            $("".bottle4f"" + field).val(bottlesdata[3]).attr(""selected"", ""selected"");
            $("".bottle5f"" + field).val(bottlesdata[4]).attr(""selected"", ""selected"");
            $("".whitebf"" + field).val(ballsdata[0]).attr(""selected"", ""selected"");
            $("".orangebf"" + field).val(ballsdata[1]).attr(""selected"", ""selected"");
            $("".invalidbf"" + field).val(ballsdata[2]).attr(""selected"", ""selected"");
            $("".remainbf"" + field).val(ballsdata[3]).attr(""selected"", ""selected"");
            $("".extra1f"" + field).val(extradata[0]).attr(""selected"", ""selected"");
            $("".extra2f"" + field).val(extradata[1]).attr(""selected"", ""selected"");
            $("".penalty1f"" + field).val(penaltydata[0]).attr(""selected"", ""selected"");
            $(""#finalscoref"" + field).html(score);
            $(""#finalscoref"" + field).css(""background-color"", ""gray"");
            $(""#teamnumberf"" + fi");
            WriteLiteral(@"eld).html(teamnumber);
            $(""#teamnumberf"" + field).css(""background-color"", ""gray"");
            roundidlist[field - 1] = roundid;
            //finalscore
            //teamnumber
        });
        chat.on(""validate"", function (team1, team2, team3, team4, team5, team6) {
            $(""#field1selection"").css(""background-color"", ""#fcc65b"")
            $(""#field2selection"").css(""background-color"", ""#fcc65b"")
            $(""#field3selection"").css(""background-color"", ""#fcc65b"")
            $(""#field4selection"").css(""background-color"", ""#fcc65b"")
            $(""#field5selection"").css(""background-color"", ""#fcc65b"")
            $(""#field6selection"").css(""background-color"", ""#fcc65b"")
            matchesvalid = [false, false, false, false, false, false]
            if (team1 == 1) {
                $(""#field1selection"").css(""background-color"", ""#ffffff"")
                matchesvalid[0] = true
            } else if ($(""#field1selection"").val() == ""EMPTY"") {
                $(""#field1selection"").css(""backgr");
            WriteLiteral(@"ound-color"", ""#fc685b"")
            }
            if (team2 == 1) {
                matchesvalid[1] = true
                $(""#field2selection"").css(""background-color"", ""#ffffff"")
            } else if ($(""#field2selection"").val() == ""EMPTY"") {
                $(""#field2selection"").css(""background-color"", ""#fc685b"")
            }
            if (team3 == 1) {
                matchesvalid[2] = true
                $(""#field3selection"").css(""background-color"", ""#ffffff"")
            } else if ($(""#field3selection"").val() == ""EMPTY"") {
                $(""#field3selection"").css(""background-color"", ""#fc685b"")
            }
            if (team4 == 1) {
                matchesvalid[3] = true
                $(""#field4selection"").css(""background-color"", ""#ffffff"")
            } else if ($(""#field4selection"").val() == ""EMPTY"") {
                $(""#field4selection"").css(""background-color"", ""#fc685b"")
            }
            if (team5 == 1) {
                matchesvalid[4] = true
                $(""#field5selection");
            WriteLiteral(@""").css(""background-color"", ""#ffffff"")
            } else if ($(""#field5selection"").val() == ""EMPTY"") {
                $(""#field5selection"").css(""background-color"", ""#fc685b"")
            }
            if (team6 == 1) {
                matchesvalid[5] = true
                $(""#field6selection"").css(""background-color"", ""#ffffff"")
            } else if ($(""#field6selection"").val() == ""EMPTY"") {
                $(""#field6selection"").css(""background-color"", ""#fc685b"")
            }
        });
        
        chat.on(""addMatches"", function (numofmatches) {
            $(""#matchselector"").empty()
            var defaultmarkup = ""<option id='oldmatch'>(OLD) Match "" + currentmatch + ""</option>""
            $(""#matchselector"").append(defaultmarkup)
            oldmatchselected = true
            var matchescount;
            for (matchescount = 0; matchescount < numofmatches; matchescount++) {
                var markup = ""<option value='"" + (matchescount + 1) + ""-match'>Match "" + (matchescount + 1) + ""</option>"";
");
            WriteLiteral(@"                $(""#matchselector"").append(markup);
            }
            matchescount = 0;
        });
        // Start the connection.
        var fieldsub = 0;
        var lockedin = false;
        chat.start().then(function () {
            chat.on(""theseTeams"", function (teams) {
                $(""#field1selection"").val(""EMPTY"");
                $(""#field2selection"").val(""EMPTY"");
                $(""#field3selection"").val(""EMPTY"");
                $(""#field4selection"").val(""EMPTY"");
                $(""#field5selection"").val(""EMPTY"");
                $(""#field6selection"").val(""EMPTY"");
                $(""#field1selection"").css(""background-color"", ""#fc685b"")
                $(""#field2selection"").css(""background-color"", ""#fc685b"")
                $(""#field3selection"").css(""background-color"", ""#fc685b"")
                $(""#field4selection"").css(""background-color"", ""#fc685b"")
                $(""#field5selection"").css(""background-color"", ""#fc685b"")
                $(""#field6selection"").css(""background-col");
            WriteLiteral(@"or"", ""#fc685b"")
                $(""#field1testmatch"").css(""background-color"", ""dimgray"")
                $(""#field1rerun"").css(""background-color"", ""dimgray"")
                $(""#field1completed"").css(""background-color"", ""red"")
                $(""#field1round"").css(""background-color"", ""red"")
                $(""#field1round"").html(""NaN"")
                $(""#field1testmatch"").html(""Competition Match"")
                $(""#field1rerun"").html(""Scheduled Match"")
                $(""#field1completed"").html(""NaN"")
                $(""#field2testmatch"").css(""background-color"", ""dimgray"")
                $(""#field2rerun"").css(""background-color"", ""dimgray"")
                $(""#field2completed"").css(""background-color"", ""red"")
                $(""#field2round"").css(""background-color"", ""red"")
                $(""#field2round"").html(""NaN"")
                $(""#field2testmatch"").html(""Competition Match"")
                $(""#field2rerun"").html(""Scheduled Match"")
                $(""#field2completed"").html(""NaN"")
                $(""#");
            WriteLiteral(@"field3testmatch"").css(""background-color"", ""dimgray"")
                $(""#field3rerun"").css(""background-color"", ""dimgray"")
                $(""#field3completed"").css(""background-color"", ""red"")
                $(""#field3round"").css(""background-color"", ""red"")
                $(""#field3round"").html(""NaN"")
                $(""#field3testmatch"").html(""Competition Match"")
                $(""#field3rerun"").html(""Scheduled Match"")
                $(""#field3completed"").html(""NaN"")
                $(""#field4testmatch"").css(""background-color"", ""dimgray"")
                $(""#field4rerun"").css(""background-color"", ""dimgray"")
                $(""#field4round"").css(""background-color"", ""red"")
                $(""#field4round"").html(""NaN"")
                $(""#field4completed"").css(""background-color"", ""red"")
                $(""#field4testmatch"").html(""Competition Match"")
                $(""#field4rerun"").html(""Scheduled Match"")
                $(""#field4completed"").html(""NaN"")
                $(""#field5testmatch"").css(""background-co");
            WriteLiteral(@"lor"", ""dimgray"")
                $(""#field5rerun"").css(""background-color"", ""dimgray"")
                $(""#field5completed"").css(""background-color"", ""red"")
                $(""#field5round"").css(""background-color"", ""red"")
                $(""#field5round"").html(""NaN"")
                $(""#field5testmatch"").html(""Competition Match"")
                $(""#field5rerun"").html(""Scheduled Match"")
                $(""#field5completed"").html(""NaN"")
                $(""#field6testmatch"").css(""background-color"", ""dimgray"")
                $(""#field6rerun"").css(""background-color"", ""dimgray"")
                $(""#field6round"").css(""background-color"", ""red"")
                $(""#field6round"").html(""NaN"")
                $(""#field6completed"").css(""background-color"", ""red"")
                $(""#field6testmatch"").html(""Competition Match"")
                $(""#field6rerun"").html(""Scheduled Match"")
                $(""#field6completed"").html(""NaN"")
                $.each(teams, function (index, value) {
                    $(""#field"" + (in");
            WriteLiteral(@"dex + 1) + ""selection"").val(value.teamNumber)
                    if (value.teamNumber != ""EMPTY"") {
                        $(""#field"" + (index + 1) + ""selection"").css(""background-color"", ""#ffffff"")
                        if (value.completed == true) {
                            $(""#field"" + (index + 1) + ""completed"").css(""background-color"", ""darkorange"")
                            $(""#field"" + (index + 1) + ""completed"").html(""Already Completed"")
                        } else {
                            $(""#field"" + (index + 1) + ""completed"").css(""background-color"", ""dimgray"")
                            $(""#field"" + (index + 1) + ""completed"").html(""Awaiting Completion"")
                        }
                        if (value.test == true) {
                            $(""#field"" + (index + 1) + ""testmatch"").css(""background-color"", ""deeppink"")
                            $(""#field"" + (index + 1) + ""testmatch"").html(""Test Match"")
                        } else {
                            $(""#field");
            WriteLiteral(@""" + (index + 1) + ""testmatch"").css(""background-color"", ""dimgray"")
                            $(""#field"" + (index + 1) + ""testmatch"").html(""Competition Match"")
                        }
                        if (value.rerun == true) {
                            $(""#field"" + (index + 1) + ""rerun"").css(""background-color"", ""forestgreen"")
                            $(""#field"" + (index + 1) + ""rerun"").html(""Rerun"")
                        } else {
                            $(""#field"" + (index + 1) + ""rerun"").css(""background-color"", ""dimgray"")
                            $(""#field"" + (index + 1) + ""rerun"").html(""Scheduled Match"")
                        }
                        $(""#field"" + (index + 1) + ""round"").css(""background-color"", ""dimgray"")
                        $(""#field"" + (index + 1) + ""round"").html(""Round "" + value.roundNum)
                    } else {
                        $(""#field"" + (index + 1) + ""testmatch"").css(""background-color"", ""dimgray"")
                        $(""#field"" + (index +");
            WriteLiteral(@" 1) + ""rerun"").css(""background-color"", ""dimgray"")
                        $(""#field"" + (index + 1) + ""completed"").css(""background-color"", ""red"")
                        $(""#field"" + (index + 1) + ""testmatch"").html(""Competition Match"")
                        $(""#field"" + (index + 1) + ""rerun"").html(""Scheduled Match"")
                        $(""#field"" + (index + 1) + ""completed"").html(""NaN"")
                        $(""#field"" + (index + 1) + ""round"").css(""background-color"", ""red"")
                        $(""#field"" + (index + 1) + ""round"").html(""NaN"")
                    }
                
                });
                    chat.invoke(""checkIfValid"", currentmatch)
            });
            $(""#checkvalid"").click(function () {
                chat.invoke(""checkIfValid"", currentmatch);
            });
            $(document).ready(function () {
                chat.invoke(""selectThisMatch"", 1);
            });
            $("".roundbutton1"").click(function () {
                $(""#submitteams"").attr(""hid");
            WriteLiteral(@"den"", false);
                $(""#round1list"").css(""background-color"", ""gray"");
                $(""#round2list"").css(""background-color"", ""lightgray"");
                publicround = 1;
            });
            $("".roundbutton2"").click(function () {
                $(""#submitteams"").attr(""hidden"", false);
                $(""#round1list"").css(""background-color"", ""lightgray"");
                $(""#round2list"").css(""background-color"", ""gray"");
                publicround = 2;
            });
            $(""#submitteams"").click(function () {
                var teamid1 = $(""#field1selection"").val();
                var teamid2 = $(""#field2selection"").val();
                var teamid3 = $(""#field3selection"").val();
                var teamid4 = $(""#field4selection"").val();
                var teamid5 = $(""#field5selection"").val();
                var teamid6 = $(""#field6selection"").val();
                $(""#teamsubmissionstatus"").html(""["" + teamid1 + "", "" + teamid2 + "", "" + teamid3 + "", "" + teamid4 + "", "" + team");
            WriteLiteral(@"id5 + "", "" + teamid6 + ""] selected for judges!"")
                chat.invoke(""matchMaker"", teamid1, teamid2, teamid3, teamid4, teamid5, teamid6, 1, publicround, matchesvalid[0],matchesvalid[1],matchesvalid[2],matchesvalid[3],matchesvalid[4],matchesvalid[5]);
            });
            $(""#sendchat"").click(function () {
                var message = $(""#usermessage"").val();
                var sender = ""Match Manager (Official)""
                var issue = $(""#userissue"").is("":checked"");
                chat.invoke(""sendMessage"", message, issue, sender)
                $(""#usermessage"").val("""");
            });
            $(""#matchselector"").change(function () {
                if (oldmatchselected == true) {
                    $(""#oldmatch"").remove();
                    oldmatchselected = false
                }
                var selectedmatch = $(this).children("":selected"").val();
                var matchnumber = selectedmatch.split(""-"");
                currentmatch = parseInt(matchnumber[0])
       ");
            WriteLiteral(@"         chat.invoke(""selectThisMatch"", parseInt(matchnumber[0]));
            });
            $(""#broadcastmessage"").click(function () {
                var message = $(""#userbroadcastmessage"").val();
                var sender = ""Match Manager (Official)"";
                var issue = $(""#userbroadcastissue"").is("":checked"");
                var volunteersonly = $(""#userbroadcaststaff"").is("":checked"")
                chat.invoke(""sendBroadcast"", message, issue, sender, volunteersonly)
            });
            $(""#clearchat"").click(function () {
                $("".volunteerchat"").empty();
            });
            $(""#senddatatest"").click(function () {
                chat.invoke(""scoreCheck"", 1, ""0/13/5/11/-2^0/36/-3/5^12/0^-3/0"", 50, 0, ""1111-1"");
            });

            $(""#lockin"").click(function () {
                fieldsub += parseFloat($(""#fieldn"").val());
                if (fieldsub > 6 || fieldsub < 1) {
                    $(""#fieldissue"").text(""Field must be 1-6!"");
                } el");
            WriteLiteral(@"se {
                    lockedin = true;
                    $(""#fieldn"").attr(""disabled"", true);
                    chat.invoke(""initField"",fieldsub, 1);
                    $(""#fieldissue"").text("""");
                }
            });
            $(""#stage1"").click(function () {
                chat.invoke(""setStage"",1);
            });
            $(""#cancelpanic"").click(function () {
                chat.invoke(""judgeHelp"",1, false);
                chat.invoke(""judgeHelp"",2, false);
                chat.invoke(""judgeHelp"",3, false);
                chat.invoke(""judgeHelp"",4, false);
                chat.invoke(""judgeHelp"",5, false);
                chat.invoke(""judgeHelp"",6, false);
            });
            $(""#stage2"").click(function () {
                chat.invoke(""setStage"", 2);
            });
            $(""#stage3"").click(function () {
                chat.invoke(""setStage"", 3);
            });
            $(""#stage4"").click(function () {
                chat.invoke(""setStage"", 4);
           ");
            WriteLiteral(@" });
            $(""#stage5"").click(function () {
                chat.invoke(""setStage"", 5);
            });
            $(""#stage6"").click(function () {
                chat.invoke(""setStage"", 6);
            });
            $(""#nextstage"").click(function () {
                if (currentstage == 6) {
                    currentstage = 1
                } else {
                    currentstage++;
                }
                chat.invoke(""setStage"", currentstage)
            });
            $(""#resetmatch"").click(function () {
                chat.invoke(""setStage"", 1);
                $(""#seef1score"").attr(""hidden"", true);
                $(""#seef2score"").attr(""hidden"", true);
                $(""#seef3score"").attr(""hidden"", true);
                $(""#seef4score"").attr(""hidden"", true);
                $(""#seef5score"").attr(""hidden"", true);
                $(""#seef6score"").attr(""hidden"", true);
            });
            $(""#prevstage"").click(function () {
                if (currentstage == 1) {
      ");
            WriteLiteral(@"              currentstage = 3
                } else {
                    currentstage--;
                }
                chat.invoke(""setStage"", currentstage)
            });
            $(""#seef1score"").click(function () {
                $(""#scoreoverlayf1"").css(""display"", ""block"");
            });
            $(""#seef2score"").click(function () {
                $(""#scoreoverlayf2"").css(""display"", ""block"");
            });
            $(""#seef3score"").click(function () {
                $(""#scoreoverlayf3"").css(""display"", ""block"");
            });
            $(""#seef4score"").click(function () {
                $(""#scoreoverlayf4"").css(""display"", ""block"");
            });
            $(""#seef5score"").click(function () {
                $(""#scoreoverlayf5"").css(""display"", ""block"");
            });
            $(""#seef6score"").click(function () {
                $(""#scoreoverlayf6"").css(""display"", ""block"");
            });
            $(""#hidef1score"").click(function () {
                $(""#scoreoverlay");
            WriteLiteral(@"f1"").css(""display"", ""none"");
            });
            $(""#hidef2score"").click(function () {
                $(""#scoreoverlayf2"").css(""display"", ""none"");
            });
            $(""#hidef3score"").click(function () {
                $(""#scoreoverlayf3"").css(""display"", ""none"");
            });
            $(""#hidef4score"").click(function () {
                $(""#scoreoverlayf4"").css(""display"", ""none"");
            });
            $(""#hidef5score"").click(function () {
                $(""#scoreoverlayf5"").css(""display"", ""none"");
            });
            $(""#hidef6score"").click(function () {
                $(""#scoreoverlayf6"").css(""display"", ""none"");
            });
            $(""#editf1score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[0], ""_blank"");
            });
            $(""#editf2score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[1], ""_blank"");
            });
            $(""#editf3score"").click(function () {
          ");
            WriteLiteral(@"      window.open(""/Team/RoundEdit/"" + roundidlist[2], ""_blank"");
            });
            $(""#editf4score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[3], ""_blank"");
            });
            $(""#editf5score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[4], ""_blank"");
            });
            $(""#editf6score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[5], ""_blank"");
            });
            function dangersetback() {
                if (dangertimer > 0) {
                    dangertimer--;
                    $(""#dangerchange"").val(""Hiding Danger Controls in "" + dangertimer + ""..."")
                    setTimeout(dangersetback, 1000);
                } else {
                    $(""#dangerchange"").val(""Show Danger Controls"");
                    $(""#dangerchange"").attr(""disabled"", false);
                    $(""#dangercontrols"").css(""display"", ""none"");
                }


            }");
            WriteLiteral(@"
            $(""#dangerchange"").click(function () {
                $(""#dangercontrols"").css(""display"", """");
                dangercontrols = true;
                $(""#dangerchange"").val(""Hiding Danger Controls in 7..."");
                dangertimer = 7;
                $(""#dangerchange"").attr(""disabled"", true);
                setTimeout(dangersetback, 1000);
                //#dangercontrols
            });
            $("".dangerbutton"").click(function () {
                dangertimer = 0;
                $(""#dangerchange"").val(""Hiding Danger Controls in 0..."")
            });
            $(""#readystatus"").click(function () {
                if (lockedin == true) {
                    chat.invoke(""initField"",fieldsub, 2);
                    $(""#fieldissue"").text("""");
                }
            });
            $(""#notreadystatus"").click(function () {
                if (lockedin == true) {
                    chat.invoke(""initField"",fieldsub, 1);
                    $(""#fieldissue"").text("""");
           ");
            WriteLiteral(@"     }
            });
            $('#sendtimer').click(function () {
                sendTimer();

            });
            $('#starttimer').click(function () {
                StartTimer();
                abort = false;
                timer = true;
                $('#starttimer').attr(""hidden"", true);
                $('#stoptimer').attr(""hidden"", false);
                $('#sendtimer').attr(""hidden"", true);
                $(""#presetmatch"").attr(""hidden"", true);
                $(""#presettimeout"").attr(""hidden"", true);
                $(""#presetpittime"").attr(""hidden"", true);

            });
            function confirmtimerstop() {
                if (confirmstoptimer > 0) {
                    confirmstoptimer--;
                    $(""#confirmstop"").val(""CONFIRM TIMER STOP ("" + confirmstoptimer + "")"")
                    setTimeout(confirmtimerstop, 1000);
                } else {
                    $('#stoptimer').attr(""hidden"", false);
                    $('#confirmstop').attr(""hidden"", true");
            WriteLiteral(@");
                }
            }
            $(""#stoptimer"").click(function () {
                $('#stoptimer').attr(""hidden"", true);
                $('#confirmstop').attr(""hidden"", false);
                $(""#confirmstop"").val(""CONFIRM TIMER STOP (3)"")
                confirmstoptimer = 3;
                setTimeout(confirmtimerstop, 1000);
            });
            $('#confirmstop').click(function () {
                abort = true;
                timer = false;
                $("".timerstatus"").css(""color"", ""black"");
                chat.invoke(""sendTimer"",minutesc, secondsc, message, 0);
                confirmstoptimer = 0;
                $('#starttimer').attr(""hidden"", false);
                $('#stoptimer').attr(""hidden"", false);
                $('#confirmstop').attr(""hidden"", true);
                $('#sendtimer').attr(""hidden"", false);
                $(""#presetmatch"").attr(""hidden"", false);
                $(""#presettimeout"").attr(""hidden"", false);
                $(""#presetpittime"").attr(""h");
            WriteLiteral(@"idden"", false);
            });
            $(""#presetmatch"").click(function () {
                $(""#minutesi"").val(2);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Game Match"");
                sendTimer();
            });
            $(""#presettimeout"").click(function () {
                $(""#minutesi"").val(5);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Field Timeout"");
                sendTimer();
            });
            $(""#presetpittime"").click(function () {
                $(""#minutesi"").val(30);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Pit Work Time"");
                sendTimer();
            });
            function checkPongs() {
                if (fieldconnected[0] == true) {
                    $(""#field1judge"").html(fieldjudge[0])
                    if (fieldarray[0] != 0 && fieldarray != 3) {
                        $(""#field1connection"").html(""Connected"");
                        $(""#field1conn");
            WriteLiteral(@"ection"").css(""background-color"", ""dimgray"");
                        $(""#field1connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[0] != 0 && fieldarray[0] != 3) {
                        $(""#field1connection"").html(""Disconnected"");
                        $(""#field1connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field1connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[1] == true) {
                    $(""#field2judge"").html(fieldjudge[1])
                    if (fieldarray[1] != 0 && fieldarray != 3) {
                        $(""#field2connection"").html(""Connected"");
                        $(""#field2connection"").css(""background-color"", ""dimgray"");
                        $(""#field2connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[1] != 0 && fieldarray[1] != 3) {
                      ");
            WriteLiteral(@"  $(""#field2connection"").html(""Disconnected"");
                        $(""#field2connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field2connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[2] == true) {
                    $(""#field3judge"").html(fieldjudge[2])
                    if (fieldarray[2] != 0 && fieldarray != 3) {
                        $(""#field3connection"").html(""Connected"");
                        $(""#field3connection"").css(""background-color"", ""dimgray"");
                        $(""#field3connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[2] != 0 && fieldarray[2] != 3) {
                        $(""#field3connection"").html(""Disconnected"");
                        $(""#field3connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field3connection"").css(""color"", ""red"");
                    }

                }
        ");
            WriteLiteral(@"        if (fieldconnected[3] == true) {
                    $(""#field4judge"").html(fieldjudge[3])
                    if (fieldarray[3] != 0 && fieldarray != 3) {
                        $(""#field4connection"").html(""Connected"");
                        $(""#field4connection"").css(""background-color"", ""dimgray"");
                        $(""#field4connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[3] != 0 && fieldarray[3] != 3) {
                        $(""#field4connection"").html(""Disconnected"");
                        $(""#field4connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field4connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[4] == true) {
                    $(""#field5judge"").html(fieldjudge[4])
                    if (fieldarray[4] != 0 && fieldarray != 3) {
                        $(""#field5connection"").html(""Connected"");
                      ");
            WriteLiteral(@"  $(""#field5connection"").css(""background-color"", ""dimgray"");
                        $(""#field5connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[4] != 0 && fieldarray[4] != 3) {
                        $(""#field5connection"").html(""Disconnected"");
                        $(""#field5connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field5connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[5] == true) {
                    $(""#field6judge"").html(fieldjudge[6])
                    if (fieldarray[5] != 0 && fieldarray != 3) {
                        $(""#field6connection"").html(""Connected"");
                        $(""#field6connection"").css(""background-color"", ""dimgray"");
                        $(""#field6connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[5] != 0 && fieldarray[5] != 3) {
      ");
            WriteLiteral(@"                  $(""#field6connection"").html(""Disconnected"");
                        $(""#field6connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field6connection"").css(""color"", ""red"");
                    }

                }
                fieldconnected = [false, false, false, false, false, false]
                $(""#ping"").html(""2"");
                setTimeout(pingTeams, 500);
            }
            function sendTimer() {
                abort = true;
                timer = false;
                part = 0;

                minutess = $(""#minutesi"").val();
                secondss = $(""#secondsi"").val();
                message = $(""#messagei"").val();
                initseconds = (minutess) + (secondss * 60);
                minutesc = minutess;
                secondsc = secondss;
                chat.invoke(""sendTimer"",minutess, secondss, message, 0);
            }
            function pingTeams() {
                $(""#ping"").html(""1"");
                chat.invoke(""");
            WriteLiteral(@"pingField"",7);
                setTimeout(checkPongs, 3000);

            }
            setTimeout(pingTeams, 1000);



            //DEINITIALIZE
            $(""#field1d"").click(function () {
                chat.invoke(""initField"", 1, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field2d"").click(function () {
                chat.invoke(""initField"", 2, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field3d"").click(function () {
                chat.invoke(""initField"", 3, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field4d"").click(function () {
                chat.invoke(""initField"", 4, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field5d"").click(function () {
                chat.invoke(""initField"", 5, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field6d"").click(function () {
                chat.invoke(""initField"", ");
            WriteLiteral(@"6, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            //NOT READY
            $(""#field1n"").click(function () {
                chat.invoke(""initField"", 1, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field2n"").click(function () {
                chat.invoke(""initField"", 2, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field3n"").click(function () {
                chat.invoke(""initField"", 3, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field4n"").click(function () {
                chat.invoke(""initField"", 4, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field5n"").click(function () {
                chat.invoke(""initField"", 5, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field6n"").click(function () {
                chat.invoke(""initField"", 6, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0""");
            WriteLiteral(@");
            });
            //READY
            $(""#field1r"").click(function () {
                chat.invoke(""initField"", 1, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field2r"").click(function () {
                chat.invoke(""initField"", 2, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field3r"").click(function () {
                chat.invoke(""initField"", 3, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field4r"").click(function () {
                chat.invoke(""initField"", 4, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field5r"").click(function () {
                chat.invoke(""initField"", 5, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field6r"").click(function () {
                chat.invoke(""initField"", 6, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            //SCORED
            $(""#");
            WriteLiteral(@"field1s"").click(function () {
                chat.invoke(""initField"", 1, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field2s"").click(function () {
                chat.invoke(""initField"", 2, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field3s"").click(function () {
                chat.invoke(""initField"", 3, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field4s"").click(function () {
                chat.invoke(""initField"", 4, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field5s"").click(function () {
                chat.invoke(""initField"", 5, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#field6s"").click(function () {
                chat.invoke(""initField"", 6, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            //ALL
            $(""#deinitall"").click(function () {
                chat.invok");
            WriteLiteral(@"e(""initField"", 1, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 2, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 3, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 4, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 5, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 6, 0, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#notreadyall"").click(function () {
                chat.invoke(""initField"", 1, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 2, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 3, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 4, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.inv");
            WriteLiteral(@"oke(""initField"", 5, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 6, 1, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#readyall"").click(function () {
                chat.invoke(""initField"", 1, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 2, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 3, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 4, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 5, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 6, 2, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            $(""#scoredall"").click(function () {
                chat.invoke(""initField"", 1, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 2, 3, 0, """", tru");
            WriteLiteral(@"e, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 3, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 4, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 5, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
                chat.invoke(""initField"", 6, 3, 0, """", true, true, ""0/0/0/0/0^0/0/0/0^0/0^0/0"");
            });
            function Countdown() {
                if (timer == true) {
                    if (secondsc == 0) {
                        if (minutesc > 0) {
                            minutesc = minutesc - 1;
                            secondsc = 59;
                            secondsview = ""59"";
                        } else {
                            timer = false;
                            TimerEnded();
                        }

                    } else if (secondsc < 11) {
                        secondsc = secondsc - 1;
                        secondsview = ""0"" ");
            WriteLiteral(@"+ secondsc;
                    }
                    else {
                        secondsc = secondsc - 1;
                        secondsview = secondsc;
                    }
                }
            }
            function StartTimer() {
                var count = setInterval(function () {

                    if (abort == true) {
                        clearInterval(count);
                        chat.invoke(""sendTimer"",minutesc, secondsc, message, 2);
                    } else {
                        chat.invoke(""sendTimer"",minutesc, secondsc, message, 1);
                    }

                    if ((part % 10) == 0) {
                        Countdown();
                    }
                    part++;
                    window.focus();
                }, 100);
            }
            function TimerEnded() {
                abort = true;
                timer = false;
                $("".timerstatus"").css(""color"", ""red"");
                $(""#presetmatch"").attr(""hidden"", false);
     ");
            WriteLiteral(@"           $(""#presettimeout"").attr(""hidden"", false);
                $(""#presetpittime"").attr(""hidden"", false);
                chat.invoke(""sendTimer"",0, 0, message, 2);
            }
        });





    });


</script>
<br />

<script type=""text/javascript"">
    $(""#bitslot4 select"").on(""change"", function () {

        //Stack
        var subtotalstack = 0;
        $("":radio[id='stack']:checked"").each(function () {
            subtotalstack += Number(this.value);
        });
        $(""#subtotalstack"").text(subtotalstack);
        //Extra
        var subtotalextra = 0;
        $("":radio[id='extra']:checked"").each(function () {
            subtotalextra += Number(this.value);
        });
        $(""#subtotalextra"").text(subtotalextra);
        //Penalty
        var subtotalpenalty = 0;
        $("":radio[id='penalty']:checked"").each(function () {
            subtotalpenalty += Number(this.value);
        });
        $(""#subtotalpenalty"").text(subtotalpenalty);
        //Total
        var total = 0;
        ");
            WriteLiteral(@"$("":radio:checked"").each(function () {
            total += Number(this.value);
        });
        $(""#total"").text(total);
        $(""#teamID"").val(total);
        $(""#teamIDcopy"").text(total);
        var description = subtotalbs + ""/"" + subtotalstack + ""/"" + subtotalextra + ""/"" + subtotalpenalty;
        $(""#data"").val(description);
    });

</script>


");
            EndContext();
            DefineSection("Scripts", async() => {
<<<<<<< Updated upstream
                BeginContext(58405, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(58410, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa7381e48f5a4f3ab61e134299ea0293", async() => {
=======
                BeginContext(58441, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(58446, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab6c4ee7eda645c49f332e25ae8bf74f", async() => {
>>>>>>> Stashed changes
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
<<<<<<< Updated upstream
                BeginContext(58471, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(58476, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "718e78b73d564846a9e56f071efc32cd", async() => {
=======
                BeginContext(58507, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(58512, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1aa100289a814451b66e87165f54ef9d", async() => {
>>>>>>> Stashed changes
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
<<<<<<< Updated upstream
                BeginContext(58514, 1, true);
=======
                BeginContext(58550, 1, true);
>>>>>>> Stashed changes
                WriteLiteral("\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RobofestWTE.Models.MatchDataModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
